{
    "hints": {},
    "source": {
        "approval": "I3ByYWdtYSB2ZXJzaW9uIDgKaW50Y2Jsb2NrIDAgMQpieXRlY2Jsb2NrIDB4Nzk2NTczIDB4NmU2ZiAweDc2NmY3NDY1NWY2NTZlNjQgMHg3MDcyNmY3MDZmNzM2MTZjNWY3NDY1Nzg3NCAweDc2NmY3NDY1NWY2MjY1Njc2OTZlIDB4NzI2NTY3NWY2MjY1Njc2OTZlIDB4NzI2NTY3NWY2NTZlNjQgMHggMHg3NjZmNzQ2NTcyNWY3NDZmNmI2NTZlNWY2OTY0IDB4NjI2ZjYxNzI2NDVmNzQ2ZjZiNjU2ZTVmNjk2NCAweDc3Njk2ZTZlNjU3MiAweDYxNjI3Mzc0NjE2OTZlIDB4NmM2NTYxNjQ2NTcyCnR4biBOdW1BcHBBcmdzCmludGNfMCAvLyAwCj09CmJueiBtYWluX2wxMgp0eG5hIEFwcGxpY2F0aW9uQXJncyAwCnB1c2hieXRlcyAweGFjYjVhOTg5IC8vICJ2b3RlKGFzc2V0LHN0cmluZyl2b2lkIgo9PQpibnogbWFpbl9sMTEKdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMApwdXNoYnl0ZXMgMHg5Yzc2NjRhMCAvLyAiY3JlYXRlKGFzc2V0LGFzc2V0KXZvaWQiCj09CmJueiBtYWluX2wxMAp0eG5hIEFwcGxpY2F0aW9uQXJncyAwCnB1c2hieXRlcyAweGRlMjNmNTgxIC8vICJwcm9wb3NhbChhc3NldCxzdHJpbmcpdm9pZCIKPT0KYm56IG1haW5fbDkKdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMApwdXNoYnl0ZXMgMHhmZmUwZTQxMSAvLyAidmV0bygpdm9pZCIKPT0KYm56IG1haW5fbDgKdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMApwdXNoYnl0ZXMgMHgyYzViYTUxOSAvLyAiZmluYWxpemVfdm90ZSgpdm9pZCIKPT0KYm56IG1haW5fbDcKZXJyCm1haW5fbDc6CnR4biBPbkNvbXBsZXRpb24KaW50Y18wIC8vIE5vT3AKPT0KdHhuIEFwcGxpY2F0aW9uSUQKaW50Y18wIC8vIDAKIT0KJiYKYXNzZXJ0CmNhbGxzdWIgZmluYWxpemV2b3RlXzUKaW50Y18xIC8vIDEKcmV0dXJuCm1haW5fbDg6CnR4biBPbkNvbXBsZXRpb24KaW50Y18wIC8vIE5vT3AKPT0KdHhuIEFwcGxpY2F0aW9uSUQKaW50Y18wIC8vIDAKIT0KJiYKYXNzZXJ0CmNhbGxzdWIgdmV0b180CmludGNfMSAvLyAxCnJldHVybgptYWluX2w5Ogp0eG4gT25Db21wbGV0aW9uCmludGNfMCAvLyBOb09wCj09CnR4biBBcHBsaWNhdGlvbklECmludGNfMCAvLyAwCiE9CiYmCmFzc2VydAp0eG5hIEFwcGxpY2F0aW9uQXJncyAxCmludGNfMCAvLyAwCmdldGJ5dGUKc3RvcmUgNAp0eG5hIEFwcGxpY2F0aW9uQXJncyAyCnN0b3JlIDUKbG9hZCA0CmxvYWQgNQpjYWxsc3ViIHByb3Bvc2FsXzMKaW50Y18xIC8vIDEKcmV0dXJuCm1haW5fbDEwOgp0eG4gT25Db21wbGV0aW9uCmludGNfMCAvLyBOb09wCj09CnR4biBBcHBsaWNhdGlvbklECmludGNfMCAvLyAwCj09CiYmCmFzc2VydAp0eG5hIEFwcGxpY2F0aW9uQXJncyAxCmludGNfMCAvLyAwCmdldGJ5dGUKc3RvcmUgMgp0eG5hIEFwcGxpY2F0aW9uQXJncyAyCmludGNfMCAvLyAwCmdldGJ5dGUKc3RvcmUgMwpsb2FkIDIKbG9hZCAzCmNhbGxzdWIgY3JlYXRlXzIKaW50Y18xIC8vIDEKcmV0dXJuCm1haW5fbDExOgp0eG4gT25Db21wbGV0aW9uCmludGNfMCAvLyBOb09wCj09CnR4biBBcHBsaWNhdGlvbklECmludGNfMCAvLyAwCiE9CiYmCmFzc2VydAp0eG5hIEFwcGxpY2F0aW9uQXJncyAxCmludGNfMCAvLyAwCmdldGJ5dGUKc3RvcmUgMAp0eG5hIEFwcGxpY2F0aW9uQXJncyAyCnN0b3JlIDEKbG9hZCAwCmxvYWQgMQpjYWxsc3ViIHZvdGVfMQppbnRjXzEgLy8gMQpyZXR1cm4KbWFpbl9sMTI6CnR4biBPbkNvbXBsZXRpb24KaW50Y18xIC8vIE9wdEluCj09CmJueiBtYWluX2wxNAplcnIKbWFpbl9sMTQ6CnR4biBBcHBsaWNhdGlvbklECmludGNfMCAvLyAwCiE9CmFzc2VydApjYWxsc3ViIG9wdGluXzAKaW50Y18xIC8vIDEKcmV0dXJuCgovLyBvcHRfaW4Kb3B0aW5fMDoKcmV0c3ViCgovLyB2b3RlCnZvdGVfMToKc3RvcmUgNwpzdG9yZSA2CmxvYWQgNgp0eG5hcyBBc3NldHMKYnl0ZWMgOCAvLyAidm90ZXJfdG9rZW5faWQiCmFwcF9nbG9iYWxfZ2V0Cj09CmFzc2VydAp0eG4gU2VuZGVyCmxvYWQgNgphc3NldF9ob2xkaW5nX2dldCBBc3NldEJhbGFuY2UKc3RvcmUgOQpzdG9yZSA4CmxvYWQgOQpsb2FkIDgKaW50Y18wIC8vIDAKPgomJgphc3NlcnQKZ2xvYmFsIExhdGVzdFRpbWVzdGFtcApieXRlYyA0IC8vICJ2b3RlX2JlZ2luIgphcHBfZ2xvYmFsX2dldAo+PQphc3NlcnQKZ2xvYmFsIExhdGVzdFRpbWVzdGFtcApieXRlY18yIC8vICJ2b3RlX2VuZCIKYXBwX2dsb2JhbF9nZXQKPAphc3NlcnQKbG9hZCA3CmV4dHJhY3QgMiAwCmJ5dGVjXzAgLy8gInllcyIKPT0KbG9hZCA3CmV4dHJhY3QgMiAwCmJ5dGVjXzEgLy8gIm5vIgo9PQp8fApsb2FkIDcKZXh0cmFjdCAyIDAKYnl0ZWMgMTEgLy8gImFic3RhaW4iCj09Cnx8CmFzc2VydApsb2FkIDcKZXh0cmFjdCAyIDAKYnl0ZWNfMCAvLyAieWVzIgo9PQpibnogdm90ZV8xX2w1CmxvYWQgNwpleHRyYWN0IDIgMApieXRlY18xIC8vICJubyIKPT0KYm56IHZvdGVfMV9sNApsb2FkIDcKZXh0cmFjdCAyIDAKYnl0ZWMgMTEgLy8gImFic3RhaW4iCj09CmJ6IHZvdGVfMV9sNgppbnRjXzEgLy8gMQpyZXR1cm4Kdm90ZV8xX2w0OgpieXRlY18xIC8vICJubyIKYnl0ZWNfMSAvLyAibm8iCmFwcF9nbG9iYWxfZ2V0CmludGNfMSAvLyAxCisKYXBwX2dsb2JhbF9wdXQKYiB2b3RlXzFfbDYKdm90ZV8xX2w1OgpieXRlY18wIC8vICJ5ZXMiCmJ5dGVjXzAgLy8gInllcyIKYXBwX2dsb2JhbF9nZXQKaW50Y18xIC8vIDEKKwphcHBfZ2xvYmFsX3B1dAp2b3RlXzFfbDY6CnJldHN1YgoKLy8gY3JlYXRlCmNyZWF0ZV8yOgpzdG9yZSAxMQpzdG9yZSAxMApieXRlYyAxMiAvLyAibGVhZGVyIgpnbG9iYWwgQ3JlYXRvckFkZHJlc3MKYXBwX2dsb2JhbF9wdXQKYnl0ZWMgNSAvLyAicmVnX2JlZ2luIgppbnRjXzAgLy8gMAphcHBfZ2xvYmFsX3B1dApieXRlYyA2IC8vICJyZWdfZW5kIgppbnRjXzAgLy8gMAphcHBfZ2xvYmFsX3B1dApieXRlYyA0IC8vICJ2b3RlX2JlZ2luIgppbnRjXzAgLy8gMAphcHBfZ2xvYmFsX3B1dApieXRlY18yIC8vICJ2b3RlX2VuZCIKaW50Y18wIC8vIDAKYXBwX2dsb2JhbF9wdXQKYnl0ZWMgOCAvLyAidm90ZXJfdG9rZW5faWQiCmludGNfMCAvLyAwCmFwcF9nbG9iYWxfcHV0CmJ5dGVjIDkgLy8gImJvYXJkX3Rva2VuX2lkIgppbnRjXzAgLy8gMAphcHBfZ2xvYmFsX3B1dApieXRlYyAxMCAvLyAid2lubmVyIgpieXRlYyA3IC8vICIiCmFwcF9nbG9iYWxfcHV0CmJ5dGVjXzAgLy8gInllcyIKaW50Y18wIC8vIDAKYXBwX2dsb2JhbF9wdXQKYnl0ZWNfMSAvLyAibm8iCmludGNfMCAvLyAwCmFwcF9nbG9iYWxfcHV0CmJ5dGVjXzMgLy8gInByb3Bvc2FsX3RleHQiCmJ5dGVjIDcgLy8gIiIKYXBwX2dsb2JhbF9wdXQKYnl0ZWMgOCAvLyAidm90ZXJfdG9rZW5faWQiCmxvYWQgMTAKdHhuYXMgQXNzZXRzCmFwcF9nbG9iYWxfcHV0CmJ5dGVjIDkgLy8gImJvYXJkX3Rva2VuX2lkIgpsb2FkIDExCnR4bmFzIEFzc2V0cwphcHBfZ2xvYmFsX3B1dApyZXRzdWIKCi8vIHByb3Bvc2FsCnByb3Bvc2FsXzM6CnN0b3JlIDEzCnN0b3JlIDEyCmxvYWQgMTIKdHhuYXMgQXNzZXRzCmJ5dGVjIDkgLy8gImJvYXJkX3Rva2VuX2lkIgphcHBfZ2xvYmFsX2dldAo9PQphc3NlcnQKdHhuIFNlbmRlcgpsb2FkIDEyCmFzc2V0X2hvbGRpbmdfZ2V0IEFzc2V0QmFsYW5jZQpzdG9yZSAxNQpzdG9yZSAxNApsb2FkIDE1CmxvYWQgMTQKaW50Y18wIC8vIDAKPgomJgphc3NlcnQKYnl0ZWNfMyAvLyAicHJvcG9zYWxfdGV4dCIKbG9hZCAxMwpleHRyYWN0IDIgMAphcHBfZ2xvYmFsX3B1dApieXRlYyA1IC8vICJyZWdfYmVnaW4iCmdsb2JhbCBMYXRlc3RUaW1lc3RhbXAKYXBwX2dsb2JhbF9wdXQKYnl0ZWMgNiAvLyAicmVnX2VuZCIKZ2xvYmFsIExhdGVzdFRpbWVzdGFtcApwdXNoaW50IDEwMCAvLyAxMDAKKwphcHBfZ2xvYmFsX3B1dApieXRlYyA0IC8vICJ2b3RlX2JlZ2luIgpnbG9iYWwgTGF0ZXN0VGltZXN0YW1wCmFwcF9nbG9iYWxfcHV0CmJ5dGVjXzIgLy8gInZvdGVfZW5kIgpnbG9iYWwgTGF0ZXN0VGltZXN0YW1wCnB1c2hpbnQgMTAwMDAwMDAwIC8vIDEwMDAwMDAwMAorCmFwcF9nbG9iYWxfcHV0CnJldHN1YgoKLy8gdmV0bwp2ZXRvXzQ6CnR4biBTZW5kZXIKYnl0ZWMgMTIgLy8gImxlYWRlciIKYXBwX2dsb2JhbF9nZXQKPT0KYXNzZXJ0CmJ5dGVjXzMgLy8gInByb3Bvc2FsX3RleHQiCmJ5dGVjIDcgLy8gIiIKYXBwX2dsb2JhbF9wdXQKYnl0ZWMgNSAvLyAicmVnX2JlZ2luIgppbnRjXzAgLy8gMAphcHBfZ2xvYmFsX3B1dApieXRlYyA2IC8vICJyZWdfZW5kIgppbnRjXzAgLy8gMAphcHBfZ2xvYmFsX3B1dApieXRlYyA0IC8vICJ2b3RlX2JlZ2luIgppbnRjXzAgLy8gMAphcHBfZ2xvYmFsX3B1dApieXRlY18yIC8vICJ2b3RlX2VuZCIKaW50Y18wIC8vIDAKYXBwX2dsb2JhbF9wdXQKYnl0ZWNfMCAvLyAieWVzIgppbnRjXzAgLy8gMAphcHBfZ2xvYmFsX3B1dApieXRlY18xIC8vICJubyIKaW50Y18wIC8vIDAKYXBwX2dsb2JhbF9wdXQKcmV0c3ViCgovLyBmaW5hbGl6ZV92b3RlCmZpbmFsaXpldm90ZV81OgpnbG9iYWwgTGF0ZXN0VGltZXN0YW1wCmJ5dGVjXzIgLy8gInZvdGVfZW5kIgphcHBfZ2xvYmFsX2dldAo+CmFzc2VydApieXRlY18wIC8vICJ5ZXMiCmFwcF9nbG9iYWxfZ2V0CmJ5dGVjXzEgLy8gIm5vIgphcHBfZ2xvYmFsX2dldAo+CmJueiBmaW5hbGl6ZXZvdGVfNV9sMgpieXRlYyAxMCAvLyAid2lubmVyIgpwdXNoYnl0ZXMgMHg2ZTZmM2EyMCAvLyAibm86ICIKYnl0ZWNfMyAvLyAicHJvcG9zYWxfdGV4dCIKYXBwX2dsb2JhbF9nZXQKY29uY2F0CmFwcF9nbG9iYWxfcHV0CmIgZmluYWxpemV2b3RlXzVfbDMKZmluYWxpemV2b3RlXzVfbDI6CmJ5dGVjIDEwIC8vICJ3aW5uZXIiCnB1c2hieXRlcyAweDc5NjU3MzNhMjAgLy8gInllczogIgpieXRlY18zIC8vICJwcm9wb3NhbF90ZXh0IgphcHBfZ2xvYmFsX2dldApjb25jYXQKYXBwX2dsb2JhbF9wdXQKZmluYWxpemV2b3RlXzVfbDM6CmJ5dGVjXzMgLy8gInByb3Bvc2FsX3RleHQiCmJ5dGVjIDcgLy8gIiIKYXBwX2dsb2JhbF9wdXQKYnl0ZWMgNSAvLyAicmVnX2JlZ2luIgppbnRjXzAgLy8gMAphcHBfZ2xvYmFsX3B1dApieXRlYyA2IC8vICJyZWdfZW5kIgppbnRjXzAgLy8gMAphcHBfZ2xvYmFsX3B1dApieXRlYyA0IC8vICJ2b3RlX2JlZ2luIgppbnRjXzAgLy8gMAphcHBfZ2xvYmFsX3B1dApieXRlY18yIC8vICJ2b3RlX2VuZCIKaW50Y18wIC8vIDAKYXBwX2dsb2JhbF9wdXQKYnl0ZWNfMCAvLyAieWVzIgppbnRjXzAgLy8gMAphcHBfZ2xvYmFsX3B1dApieXRlY18xIC8vICJubyIKaW50Y18wIC8vIDAKYXBwX2dsb2JhbF9wdXQKcmV0c3Vi",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDgKcHVzaGludCAwIC8vIDAKcmV0dXJu"
    },
    "schema": {
        "local": {
            "declared": {},
            "reserved": {}
        },
        "global": {
            "declared": {
                "leader": {
                    "type": "bytes",
                    "key": "leader",
                    "descr": ""
                },
                "reg_begin": {
                    "type": "uint64",
                    "key": "reg_begin",
                    "descr": ""
                },
                "reg_end": {
                    "type": "uint64",
                    "key": "reg_end",
                    "descr": ""
                },
                "vote_begin": {
                    "type": "uint64",
                    "key": "vote_begin",
                    "descr": ""
                },
                "vote_end": {
                    "type": "uint64",
                    "key": "vote_end",
                    "descr": ""
                },
                "voter_token_id": {
                    "type": "uint64",
                    "key": "voter_token_id",
                    "descr": ""
                },
                "board_token_id": {
                    "type": "uint64",
                    "key": "board_token_id",
                    "descr": ""
                },
                "winner": {
                    "type": "bytes",
                    "key": "winner",
                    "descr": ""
                },
                "yes": {
                    "type": "uint64",
                    "key": "yes",
                    "descr": ""
                },
                "no": {
                    "type": "uint64",
                    "key": "no",
                    "descr": ""
                },
                "proposal_text": {
                    "type": "bytes",
                    "key": "proposal_text",
                    "descr": ""
                }
            },
            "reserved": {}
        }
    },
    "contract": {
        "name": "DAO",
        "methods": [
            {
                "name": "vote",
                "args": [
                    {
                        "type": "asset",
                        "name": "voter_token"
                    },
                    {
                        "type": "string",
                        "name": "vote"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "create",
                "args": [
                    {
                        "type": "asset",
                        "name": "voter_token"
                    },
                    {
                        "type": "asset",
                        "name": "board_token"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "proposal",
                "args": [
                    {
                        "type": "asset",
                        "name": "board_token"
                    },
                    {
                        "type": "string",
                        "name": "proposal"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "veto",
                "args": [],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "finalize_vote",
                "args": [],
                "returns": {
                    "type": "void"
                }
            }
        ],
        "networks": {}
    }
}